{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-js-59bf57643541b9af8079.js","mappings":"0MAQMA,EAAyCC,EAAAA,MAAW,YAAe,IAAZC,EAAW,EAAXA,KACrDC,GAAeC,EAAAA,EAAAA,aAsBrB,OApBAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAaC,SAASC,cAAc,UAEpCC,EAAa,CACjBC,IAbM,gCAcNR,KAAAA,EACA,aAAc,WACdS,MAAO,UACPC,MAAO,eACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQP,GAAYQ,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACnDb,EAAWc,aAAaF,EAAKC,MAG/BhB,MAAAA,GAAA,UAAAA,EAAckB,eAAd,SAAuBC,YAAYhB,KAClC,CAACJ,KAEG,eAAKqB,IAAKpB,OAGnBH,EAAWwB,YAAc,aAEzB,QC5Be,SAASC,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,yBACE,cAAIC,UAAU,sCACXF,EAAYG,QAEf,aAAGD,UAAU,oCAAb,QACQF,EAAYI,OAEpB,eAAKF,UAAU,6BACb,eAAKA,UAAU,cACb,eACEA,UAAU,0BACVG,wBAAyB,CAAEC,OAAQL,QAIzC,QAAC,EAAD,CAAY3B,KAAK","sources":["webpack://gatsby-starter-default/./src/components/Common/Utterances.tsx","webpack://gatsby-starter-default/./src/pages/{MarkdownRemark.frontmatter__slug}.js"],"sourcesContent":["import React, { createRef, useEffect } from 'react';\r\n\r\nconst src = 'https://utteranc.es/client.js';\r\n\r\nexport interface IUtterancesProps {\r\n  repo: string;\r\n}\r\n\r\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo }) => {\r\n  const containerRef = createRef<HTMLDivElement>();\r\n\r\n  useEffect(() => {\r\n    const utterances = document.createElement('script');\r\n\r\n    const attributes = {\r\n      src,\r\n      repo,\r\n      'issue-term': 'pathname',\r\n      label: 'Comment',\r\n      theme: 'github-light',\r\n      crossOrigin: 'anonymous',\r\n      async: 'true',\r\n    };\r\n\r\n    Object.entries(attributes).forEach(([key, value]) => {\r\n      utterances.setAttribute(key, value);\r\n    });\r\n\r\n    containerRef?.current?.appendChild(utterances);\r\n  }, [repo]);\r\n\r\n  return <div ref={containerRef} />;\r\n});\r\n\r\nUtterances.displayName = 'Utterances';\r\n\r\nexport default Utterances;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Utterances from 'components/Common/Utterances';\r\nimport '../styles/base.min.css';\r\nimport '../styles/components.min.css';\r\nimport '../styles/typography.min.css';\r\nimport '../styles/utilities.min.css';\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark;\r\n  return (\r\n    <>\r\n      <h2 className=\"font-extrabold text-3xl block my-3\">\r\n        {frontmatter.title}\r\n      </h2>\r\n      <p className=\"text-xs text-gray-500 block my-3\">\r\n        작성일: {frontmatter.date}\r\n      </p>\r\n      <div className=\"blog-post-container mb-4\">\r\n        <div className=\"blog-post\">\r\n          <div\r\n            className=\"blog-post-content prose\"\r\n            dangerouslySetInnerHTML={{ __html: html }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Utterances repo=\"do1con/kss_blog\" />\r\n    </>\r\n  );\r\n}\r\nexport const pageQuery = graphql`\r\n  query ($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        slug\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Utterances","React","repo","containerRef","createRef","useEffect","utterances","document","createElement","attributes","src","label","theme","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","Template","markdownRemark","data","frontmatter","html","className","title","date","dangerouslySetInnerHTML","__html"],"sourceRoot":""}